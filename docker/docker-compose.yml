services:
  postgres:
    image: postgres:15
    env_file:
      - .env.singleton 
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    
    networks:
      - app-network
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build:
      context: ..
      dockerfile: Dockerfile
    env_file:
      - .env.singleton #生产环境的环境变量, 相对于docker-compose.yml
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    command:
      sh -c "npm run migrate:prod && 
             npm start"

  nginx:
    image: nginx:1.25
    ports:
      - '80:80'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ../public:/usr/share/nginx/html/public
    depends_on:
      - app
    networks:
      - app-network

volumes:
  postgres_data:
  
networks:
  app-network:
    driver: bridge
